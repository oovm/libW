package libw: bundle;

world host {
    export printer;
    export file-system;
}

interface printer {
    print-i8: func(value: s8);
    print-i16: func(value: s16);
    print-i32: func(value: s32);
    print-i64: func(value: s64);
    print-u8: func(value: u8);
    print-u16: func(value: u16);
    print-u32: func(value: u32);
    print-u64: func(value: u64);
    print-f32: func(value: float32);
    print-f64: func(value: float64);
    print-char: func(value: char);
    print-str: func(value: string);
    print-list-u8: func(value: list<u8>);
}

interface primitive {

    resource int {

    }

    resource any {
        box-bool: static func(value: bool) -> any;
        box-i8: static func(value: s8) -> any;
        box-i16: static func(value: s16) -> any;
        box-i32: static func(value: s32) -> any;
        box-i64: static func(value: s64) -> any;
        box-u8: static func(value: u8) -> any;
        box-u16: static func(value: u16) -> any;
        box-u32: static func(value: u32) -> any;
        box-u64: static func(value: u64) -> any;

        get-u8: func() -> u8;

    }
}


interface collections {

    resource vector-u8 {
        new: func(capacity: u32) -> vector;

        get: func(index: i32) -> any;
        set: func(index: i32, value: any) -> any
    }
}


interface file-system {

}

interface image {
    resource image-buffer {

    }
}